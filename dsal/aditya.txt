Code

size 10

client_list = [None) * size

def add_client():

client_id = int(input("Client ID: "))

name = input("Client Name: ")

telephone = input("Client Telephone Number: ")

client_details = [client_id, name, telephone]

index = client_id % size

#Inserting record using linear probing in case of collision

for i in range(size).

if client_list[index] is None

client_list[index] = client_details

print("Client details added at index", index, client_details)

break

else

index = (index + 1) % size

else

print("Hash table is full, cannot add client ")printClientList, client list)

def search client()

client_id int(input("Enter Client ID to search: "))

index client_id % size

comparisons = 0

for i in range(size).

if client_list[index] is not None

comparisons += 1

if client_list[index][0] = client_id

print(f Client found at index (index) (client_list[index]}")

print(f "Number of comparisons required. (comparisons)")

return

index = (index + 1) % size

print("Client not found.")

print("Number of comparisons required (comparisons)")

def delete_client():

client_id = int(input("Enter Client ID to delete: "))

index = client_id % size

for i in range(size):if client list[index] is not None

if client list[index][0] == client_id

client list[index] None

print("Client ID (client_jo) deleted successfully")

return

Index (index + 1) % size

print("Client not found, cannot delete")

def main()

while True

print("\nMenu.")

print("\t1. Add Client")

print("\t2: Search Client")

print("\t13: Delete Client")

print("\f4: Exit")

try:

ch=int(input("Enter your choice."))

except ValueError:

print("Invalid input! Please enter a number.")

continue

if ch == 1:add_client()

elif ch=2

search client()

elif ch == 3:

delete_client()

elif ch == 4:

print("Exiting program. Goodbye!")

break

else:

print("Invalid choice! Try again.")

if name ==="_main_

main()